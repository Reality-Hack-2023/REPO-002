{"ast":null,"code":"var _jsxFileName = \"/Users/victorli/Workspace/reality-hack/frontend/src/Drawing.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport square from './square.png';\nimport circle from './circle.png';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Drawing() {\n  _s();\n  const [drawing, setDrawing] = useState(false);\n  const [minX, setMinX] = useState(1000);\n  const [minY, setMinY] = useState(1000);\n  const [maxX, setMaxX] = useState(-1);\n  const [maxY, setMaxY] = useState(-1);\n  const [canvasDone, setCanvasDone] = useState(false);\n  const [curImg, setCurImg] = useState(\"\");\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const drawLine = (x1, y1, x2, y2, color) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    ctxRef.current = ctx;\n  };\n  const confirmCanvas = () => {\n    setCanvasDone(true);\n    clear();\n    drawLine(minX, minY, minX, maxY, \"black\");\n    drawLine(minX, maxY, maxX, maxY, \"black\");\n    drawLine(maxX, maxY, maxX, minY, \"black\");\n    drawLine(maxX, minY, minX, minY, \"black\");\n    console.log(\"done\", maxX - minX, maxY - minY);\n  };\n  const updateCanvas = (x, y) => {\n    if (x < minX) setMinX(x);\n    if (y < minY) setMinY(y);\n    if (x > maxX) setMaxX(x);\n    if (y > maxY) setMaxY(y);\n  };\n  const startDraw = _ref => {\n    let {\n      nativeEvent\n    } = _ref;\n    if (curImg != '') {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const image = new Image();\n      image.src = square;\n      image.onload = () => {\n        ctx.drawImage(image, 0, 0, 50, 50);\n      };\n      curImg = \"\";\n      return;\n    }\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(offsetX, offsetY);\n    setDrawing(true);\n    if (!canvasDone) updateCanvas(offsetX, offsetY);\n  };\n  const stopDraw = () => {\n    ctxRef.current.closePath();\n    setDrawing(false);\n  };\n  const draw = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n    if (!drawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    ctxRef.current.lineTo(offsetX, offsetY);\n    ctxRef.current.stroke();\n    if (!canvasDone) updateCanvas(offsetX, offsetY);\n  };\n  const clear = () => {\n    ctxRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    // For supporting computers with higher screen densities, we double the screen density\n    // canvas.width = window.innerWidth * 2;\n    // canvas.height = window.innerHeight * 2;\n    // canvas.style.width = `800px`;\n    // canvas.style.height = `600px`;\n    // Setting the context to enable us draw\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'blue';\n    ctx.lineWidth = 2;\n    ctxRef.current = ctx;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      // onClick={onClick}\n      onMouseDown: startDraw,\n      onMouseUp: stopDraw,\n      onMouseMove: draw,\n      ref: canvasRef,\n      width: 960,\n      height: 640\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: confirmCanvas,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: square,\n      onClick: setCurImg(\"square\"),\n      width: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: circle,\n      onClick: setCurImg(\"circle\"),\n      width: 40\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Drawing, \"lV+OtRnrylfQeZ4d7Iohx6UomNU=\");\n_c = Drawing;\nexport default Drawing;\nvar _c;\n$RefreshReg$(_c, \"Drawing\");","map":{"version":3,"names":["useEffect","useRef","useState","square","circle","Drawing","drawing","setDrawing","minX","setMinX","minY","setMinY","maxX","setMaxX","maxY","setMaxY","canvasDone","setCanvasDone","curImg","setCurImg","canvasRef","ctxRef","drawLine","x1","y1","x2","y2","color","canvas","current","ctx","getContext","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","confirmCanvas","clear","console","log","updateCanvas","x","y","startDraw","nativeEvent","image","Image","src","onload","drawImage","offsetX","offsetY","stopDraw","closePath","draw","clearRect","width","height","lineCap"],"sources":["/Users/victorli/Workspace/reality-hack/frontend/src/Drawing.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport square from './square.png';\nimport circle from './circle.png';\n\nfunction Drawing() {\n    const [drawing, setDrawing] = useState(false);\n    const [minX, setMinX] = useState(1000);\n    const [minY, setMinY] = useState(1000);\n    const [maxX, setMaxX] = useState(-1);\n    const [maxY, setMaxY] = useState(-1);\n    const [canvasDone, setCanvasDone] = useState(false);\n    const [curImg, setCurImg] = useState(\"\");\n    const canvasRef = useRef(null);\n    const ctxRef = useRef(null);\n\n    const drawLine = (x1, y1, x2, y2, color) => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n        ctxRef.current = ctx;\n    }\n    const confirmCanvas = () => {\n        setCanvasDone(true);\n        clear();\n        drawLine(minX, minY, minX, maxY, \"black\");\n        drawLine(minX, maxY, maxX, maxY, \"black\");\n        drawLine(maxX, maxY, maxX, minY, \"black\");\n        drawLine(maxX, minY, minX, minY, \"black\");\n        console.log(\"done\", maxX - minX, maxY - minY);\n    }\n    const updateCanvas = (x, y) => {\n        if (x < minX) setMinX(x);\n        if (y < minY) setMinY(y);\n        if (x > maxX) setMaxX(x);\n        if (y > maxY) setMaxY(y);\n    }\n    const startDraw = ({ nativeEvent }) => {\n        if (curImg != ''){\n            const canvas = canvasRef.current;\n            const ctx = canvas.getContext('2d');\n            const image = new Image();\n            image.src = square;\n            image.onload = () => {\n                ctx.drawImage(image, 0, 0, 50, 50);\n            };\n            curImg = \"\";\n            return;\n        }\n        const { offsetX, offsetY } = nativeEvent;\n        ctxRef.current.beginPath();\n        ctxRef.current.moveTo(offsetX, offsetY);\n        setDrawing(true);\n        if (!canvasDone) updateCanvas(offsetX, offsetY);\n    };\n    const stopDraw = () => {\n        ctxRef.current.closePath();\n        setDrawing(false);\n    };\n    const draw = ({ nativeEvent }) => {\n        if (!drawing) return;\n        const { offsetX, offsetY } = nativeEvent;\n        ctxRef.current.lineTo(offsetX, offsetY);\n        ctxRef.current.stroke();\n        if (!canvasDone) updateCanvas(offsetX, offsetY);\n    };\n    const clear = () => {\n        ctxRef.current.clearRect(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height\n        );\n    };\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        // For supporting computers with higher screen densities, we double the screen density\n        // canvas.width = window.innerWidth * 2;\n        // canvas.height = window.innerHeight * 2;\n        // canvas.style.width = `800px`;\n        // canvas.style.height = `600px`;\n        // Setting the context to enable us draw\n        const ctx = canvas.getContext('2d');\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = 'blue';\n        ctx.lineWidth = 2;\n        ctxRef.current = ctx;\n    }, []);\n    return (\n        <>\n            <canvas\n                // onClick={onClick}\n                onMouseDown={startDraw}\n                onMouseUp={stopDraw}\n                onMouseMove={draw}\n                ref={canvasRef}\n                width={960} \n                height={640}\n            />\n            <button onClick={confirmCanvas}>Done</button>\n            <img src={square} onClick={setCurImg(\"square\")} width={50}/>\n            <img src={circle} onClick={setCurImg(\"circle\")} width={40}/>\n        </>\n    );\n}\n\nexport default Drawing;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}