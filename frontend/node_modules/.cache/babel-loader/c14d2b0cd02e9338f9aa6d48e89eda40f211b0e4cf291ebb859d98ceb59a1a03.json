{"ast":null,"code":"var _jsxFileName = \"/Users/victorli/Workspace/reality-hack/frontend/src/Drawing.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport square from './square.png';\nimport circle from './circle.png';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Drawing() {\n  _s();\n  const [drawing, setDrawing] = useState(false);\n  const [minX, setMinX] = useState(1000);\n  const [minY, setMinY] = useState(1000);\n  const [maxX, setMaxX] = useState(-1);\n  const [maxY, setMaxY] = useState(-1);\n  const [canvasDone, setCanvasDone] = useState(false);\n  const [curImg, setCurImg] = useState(\"\");\n  const [objs, setObjs] = useState({});\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const addObj = () => {\n    console.log(\"begin\");\n    axios({\n      method: \"POST\",\n      url: \"/data/add\"\n    }).then(response => {\n      console.log(response);\n    });\n  };\n  const getObjs = () => {\n    axios({\n      method: \"GET\",\n      url: \"/data\"\n    }).then(response => {\n      setObjs(response.data);\n    });\n  };\n  const drawLine = (x1, y1, x2, y2, color) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    ctxRef.current = ctx;\n  };\n  const confirmCanvas = () => {\n    setCanvasDone(true);\n    clear();\n    drawLine(minX, minY, minX, maxY, \"black\");\n    drawLine(minX, maxY, maxX, maxY, \"black\");\n    drawLine(maxX, maxY, maxX, minY, \"black\");\n    drawLine(maxX, minY, minX, minY, \"black\");\n    console.log(\"done\", maxX - minX, maxY - minY);\n  };\n  const updateCanvas = (x, y) => {\n    if (x < minX) setMinX(x);\n    if (y < minY) setMinY(y);\n    if (x > maxX) setMaxX(x);\n    if (y > maxY) setMaxY(y);\n  };\n  const startDraw = _ref => {\n    let {\n      nativeEvent\n    } = _ref;\n    if (canvasDone) return;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(offsetX, offsetY);\n    setDrawing(true);\n    if (!canvasDone) updateCanvas(offsetX, offsetY);\n  };\n  const stopDraw = () => {\n    if (canvasDone) return;\n    ctxRef.current.closePath();\n    setDrawing(false);\n  };\n  const draw = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n    if (canvasDone) return;\n    if (!drawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    ctxRef.current.lineTo(offsetX, offsetY);\n    ctxRef.current.stroke();\n    if (!canvasDone) updateCanvas(offsetX, offsetY);\n  };\n  const clear = () => {\n    ctxRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'blue';\n    ctx.lineWidth = 2;\n    ctxRef.current = ctx;\n  }, []);\n  useEffect(() => {\n    getObjs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        onMouseDown: startDraw,\n        onMouseUp: stopDraw,\n        onMouseMove: draw,\n        ref: canvasRef,\n        width: 960,\n        height: 640\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), objs && objs.map((obj, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: square,\n        width: 50,\n        left: obj.x\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: confirmCanvas,\n      children: \"Done\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: square,\n      width: 50\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: circle,\n      width: 40\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addObj,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Drawing, \"ZU+gw6hrn9PlCnc56v+8M+OBP/0=\");\n_c = Drawing;\nexport default Drawing;\nvar _c;\n$RefreshReg$(_c, \"Drawing\");","map":{"version":3,"names":["useEffect","useRef","useState","square","circle","Drawing","drawing","setDrawing","minX","setMinX","minY","setMinY","maxX","setMaxX","maxY","setMaxY","canvasDone","setCanvasDone","curImg","setCurImg","objs","setObjs","canvasRef","ctxRef","addObj","console","log","axios","method","url","then","response","getObjs","data","drawLine","x1","y1","x2","y2","color","canvas","current","ctx","getContext","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","confirmCanvas","clear","updateCanvas","x","y","startDraw","nativeEvent","offsetX","offsetY","stopDraw","closePath","draw","clearRect","width","height","lineCap","map","obj","index"],"sources":["/Users/victorli/Workspace/reality-hack/frontend/src/Drawing.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport square from './square.png';\nimport circle from './circle.png';\n\nfunction Drawing() {\n    const [drawing, setDrawing] = useState(false);\n    const [minX, setMinX] = useState(1000);\n    const [minY, setMinY] = useState(1000);\n    const [maxX, setMaxX] = useState(-1);\n    const [maxY, setMaxY] = useState(-1);\n    const [canvasDone, setCanvasDone] = useState(false);\n    const [curImg, setCurImg] = useState(\"\");\n    const [objs, setObjs] = useState({});\n    const canvasRef = useRef(null);\n    const ctxRef = useRef(null);\n\n    const addObj = () => {\n        console.log(\"begin\");\n        axios({\n            method: \"POST\",\n            url:\"/data/add\",\n        })\n        .then((response) => {\n            console.log(response);\n        });\n    }\n    const getObjs = () => {\n        axios({\n            method: \"GET\",\n            url:\"/data\",\n        })\n            .then((response) => {\n            setObjs(response.data);\n        });\n    }\n    const drawLine = (x1, y1, x2, y2, color) => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n        ctxRef.current = ctx;\n    }\n    const confirmCanvas = () => {\n        setCanvasDone(true);\n        clear();\n        drawLine(minX, minY, minX, maxY, \"black\");\n        drawLine(minX, maxY, maxX, maxY, \"black\");\n        drawLine(maxX, maxY, maxX, minY, \"black\");\n        drawLine(maxX, minY, minX, minY, \"black\");\n        console.log(\"done\", maxX - minX, maxY - minY);\n    }\n    const updateCanvas = (x, y) => {\n        if (x < minX) setMinX(x);\n        if (y < minY) setMinY(y);\n        if (x > maxX) setMaxX(x);\n        if (y > maxY) setMaxY(y);\n    }\n    const startDraw = ({ nativeEvent }) => {\n        if (canvasDone) return;\n        const { offsetX, offsetY } = nativeEvent;\n        ctxRef.current.beginPath();\n        ctxRef.current.moveTo(offsetX, offsetY);\n        setDrawing(true);\n        if (!canvasDone) updateCanvas(offsetX, offsetY);\n    };\n    const stopDraw = () => {\n        if (canvasDone) return;\n        ctxRef.current.closePath();\n        setDrawing(false);\n    };\n    const draw = ({ nativeEvent }) => {\n        if (canvasDone) return;\n        if (!drawing) return;\n        const { offsetX, offsetY } = nativeEvent;\n        ctxRef.current.lineTo(offsetX, offsetY);\n        ctxRef.current.stroke();\n        if (!canvasDone) updateCanvas(offsetX, offsetY);\n    };\n    const clear = () => {\n        ctxRef.current.clearRect(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height\n        );\n    };\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = 'blue';\n        ctx.lineWidth = 2;\n        ctxRef.current = ctx;\n    }, []);\n    useEffect(() => {\n        getObjs();\n    }, []);\n    return (\n        <>\n            <div>\n                <canvas\n                    onMouseDown={startDraw}\n                    onMouseUp={stopDraw}\n                    onMouseMove={draw}\n                    ref={canvasRef}\n                    width={960} \n                    height={640}\n                />\n                {objs && objs.map((obj, index) => (\n                    <img src={square} width={50} left={obj.x}/>\n                ))}\n            </div>\n            \n            <button onClick={confirmCanvas}>Done</button>\n            <img src={square} width={50}/>\n            <img src={circle} width={40}/>\n            <button onClick={addObj}>Add</button>\n        </>\n    );\n}\n\nexport default Drawing;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}