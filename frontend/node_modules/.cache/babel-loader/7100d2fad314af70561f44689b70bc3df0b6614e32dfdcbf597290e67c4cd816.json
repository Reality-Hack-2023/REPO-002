{"ast":null,"code":"var _jsxFileName = \"/Users/victorli/Workspace/reality-hack/frontend/src/Drawing.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Drawing() {\n  _s();\n  const [drawing, setDrawing] = useState(false);\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const onClick = event => {\n    let x = event.nativeEvent.offsetX;\n    let y = event.nativeEvent.offsetY;\n    console.log(x, y);\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'blue';\n    ctx.lineWidth = 20;\n    ctxRef.current = ctx;\n  };\n  const startDraw = _ref => {\n    let {\n      nativeEvent\n    } = _ref;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(offsetX, offsetY);\n    setDrawing(true);\n    console.log(\"start\", offsetX, offsetY);\n  };\n  const stopDraw = () => {\n    ctxRef.current.closePath();\n    setDrawing(false);\n  };\n  const draw = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n    if (!drawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    ctxRef.current.lineTo(offsetX, offsetY);\n    ctxRef.current.stroke();\n    console.log(\"in progress\", offsetX, offsetY);\n  };\n  const clear = () => {\n    ctxRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    // For supporting computers with higher screen densities, we double the screen density\n    // canvas.width = window.innerWidth * 2;\n    // canvas.height = window.innerHeight * 2;\n    canvas.style.width = `${window.innerWidth}px`;\n    canvas.style.height = `${window.innerHeight}px`;\n    // Setting the context to enable us draw\n    const ctx = canvas.getContext('2d');\n    //ctx.scale(2, 2);\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'blue';\n    ctx.lineWidth = 2;\n    ctxRef.current = ctx;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      // onClick={onClick}\n      onMouseDown: startDraw,\n      onMouseUp: stopDraw,\n      onMouseMove: draw,\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(Drawing, \"+UFJd2KTpidAZ5uITn9LXrqRH70=\");\n_c = Drawing;\nexport default Drawing;\nvar _c;\n$RefreshReg$(_c, \"Drawing\");","map":{"version":3,"names":["useEffect","useRef","useState","Drawing","drawing","setDrawing","canvasRef","ctxRef","onClick","event","x","nativeEvent","offsetX","y","offsetY","console","log","canvas","current","ctx","getContext","lineCap","strokeStyle","lineWidth","startDraw","beginPath","moveTo","stopDraw","closePath","draw","lineTo","stroke","clear","clearRect","width","height","style","window","innerWidth","innerHeight"],"sources":["/Users/victorli/Workspace/reality-hack/frontend/src/Drawing.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n\nfunction Drawing() {\n    const [drawing, setDrawing] = useState(false);\n    const canvasRef = useRef(null);\n    const ctxRef = useRef(null);\n    const onClick = (event) => {\n        let x = event.nativeEvent.offsetX;\n        let y = event.nativeEvent.offsetY;\n        console.log(x, y);\n\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = 'blue';\n        ctx.lineWidth = 20;\n        ctxRef.current = ctx;\n    }\n    const startDraw = ({ nativeEvent }) => {\n        const { offsetX, offsetY } = nativeEvent;\n        ctxRef.current.beginPath();\n        ctxRef.current.moveTo(offsetX, offsetY);\n        setDrawing(true);\n        console.log(\"start\", offsetX, offsetY);\n    };\n    const stopDraw = () => {\n        ctxRef.current.closePath();\n        setDrawing(false);\n    };\n    const draw = ({ nativeEvent }) => {\n        if (!drawing) return;\n        const { offsetX, offsetY } = nativeEvent;\n        ctxRef.current.lineTo(offsetX, offsetY);\n        ctxRef.current.stroke();\n        console.log(\"in progress\", offsetX, offsetY);\n    };\n    const clear = () => {\n        ctxRef.current.clearRect(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height\n        );\n    };\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        // For supporting computers with higher screen densities, we double the screen density\n        // canvas.width = window.innerWidth * 2;\n        // canvas.height = window.innerHeight * 2;\n        canvas.style.width = `${window.innerWidth}px`;\n        canvas.style.height = `${window.innerHeight}px`;\n        // Setting the context to enable us draw\n        const ctx = canvas.getContext('2d');\n        //ctx.scale(2, 2);\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = 'blue';\n        ctx.lineWidth = 2;\n        ctxRef.current = ctx;\n      }, []);\n    return (\n        <>\n            <canvas\n                // onClick={onClick}\n                onMouseDown={startDraw}\n                onMouseUp={stopDraw}\n                onMouseMove={draw}\n                ref={canvasRef}\n            />\n        </>\n    );\n}\n\nexport default Drawing;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}