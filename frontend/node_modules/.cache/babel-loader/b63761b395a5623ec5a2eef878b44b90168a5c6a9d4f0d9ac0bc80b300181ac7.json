{"ast":null,"code":"var _jsxFileName = \"/Users/victorli/Workspace/reality-hack/frontend/src/Drawing.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport knife from './assets/weapon.svg';\nimport person from './assets/person.svg';\nimport bio from './assets/bio.svg';\nimport knifeWhite from './assets/weapon-white.svg';\nimport personWhite from './assets/person-white.svg';\nimport bioWhite from './assets/bio-white.svg';\nimport others from './assets/other.svg';\nimport map from './assets/map.jpg';\nimport axios from \"axios\";\nimport Draggable, { DraggableCore } from \"react-draggable\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Drawing() {\n  _s();\n  const [drawing, setDrawing] = useState(false);\n  const [minX, setMinX] = useState(0);\n  const [minY, setMinY] = useState(0);\n  const [maxX, setMaxX] = useState(960);\n  const [maxY, setMaxY] = useState(640);\n  const [canvasDone, setCanvasDone] = useState(false);\n\n  // const [minX, setMinX] = useState(2000);\n  // const [minY, setMinY] = useState(2000);\n  // const [maxX, setMaxX] = useState(-1);\n  // const [maxY, setMaxY] = useState(-1);\n  // const [canvasDone, setCanvasDone] = useState(false);\n  const [activeImg, setActiveImg] = useState(\"\");\n  const [activeButton, setActiveButton] = useState(\"\");\n  const [objs, setObjs] = useState([]);\n  const canvasRef = useRef(null);\n  const ctxRef = useRef(null);\n  const addObj = (type, x, y) => {\n    axios({\n      method: \"POST\",\n      url: \"/data/add\",\n      params: {\n        \"type\": type,\n        \"x\": x,\n        \"y\": y\n      }\n    }).then(response => {\n      setObjs(response.data);\n    });\n  };\n  const clearObj = () => {\n    axios({\n      method: \"POST\",\n      url: \"/data/clear\"\n    }).then(response => {\n      setObjs(response.data);\n    });\n  };\n  const getObjs = () => {\n    axios({\n      method: \"GET\",\n      url: \"/data\"\n    }).then(response => {\n      setObjs(response.data);\n      console.log(response.data);\n    });\n  };\n  const updateObj = (id, x, y) => {\n    const form = new FormData();\n    form.append('items', '[{\"id\": \"' + id + '\", \"x\":' + x + ', \"y\":' + y + '}]');\n    axios({\n      method: \"POST\",\n      url: \"/data/update\",\n      data: {\n        item\n      }\n    }).then(response => {\n      setObjs(response.data);\n    });\n  };\n  const xToRatio = x => {\n    console.log(x, minX, maxX);\n    return (x - minX) / (maxX - minX);\n  };\n  const yToRatio = y => {\n    console.log(y, minY, maxY);\n    return (y - minY) / (maxY - minY);\n  };\n  const ratioToX = x => {\n    return x * (maxX - minX) + minX;\n  };\n  const ratioToY = y => {\n    console.log(y, minY, maxY, y * (maxY - minY) + minY);\n    return y * (maxY - minY) + minY;\n  };\n  const drawLine = (x1, y1, x2, y2, color) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = 2;\n    ctx.stroke();\n    ctxRef.current = ctx;\n  };\n  const confirmCanvas = () => {\n    setCanvasDone(true);\n    const canvas = canvasRef.current;\n    const rect = canvas.getBoundingClientRect();\n    console.log(rect);\n    console.log(rect[\"x\"], rect[\"y\"]);\n    clear();\n    drawLine(minX, minY, minX, maxY, \"black\");\n    drawLine(minX, maxY, maxX, maxY, \"black\");\n    drawLine(maxX, maxY, maxX, minY, \"black\");\n    drawLine(maxX, minY, minX, minY, \"black\");\n    console.log(\"done\", maxX - minX, minX, maxY - minY, minY);\n    setMinX(minX + rect[\"x\"]);\n    setMaxX(maxX + rect[\"x\"]);\n    setMinY(minY + rect[\"y\"]);\n    setMaxY(maxY + rect[\"y\"]);\n    console.log(\"done\", maxX - minX, minX, maxY - minY, minY);\n  };\n  const updateCanvas = (x, y) => {\n    if (x < minX) setMinX(x);\n    if (y < minY) setMinY(y);\n    if (x > maxX) setMaxX(x);\n    if (y > maxY) setMaxY(y);\n  };\n  const startDraw = _ref => {\n    let {\n      nativeEvent\n    } = _ref;\n    if (canvasDone) return;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    ctxRef.current.beginPath();\n    ctxRef.current.moveTo(offsetX, offsetY);\n    setDrawing(true);\n    if (!canvasDone) updateCanvas(offsetX, offsetY);\n  };\n  const stopDraw = () => {\n    if (canvasDone) return;\n    ctxRef.current.closePath();\n    setDrawing(false);\n  };\n  const draw = _ref2 => {\n    let {\n      nativeEvent\n    } = _ref2;\n    if (canvasDone) return;\n    if (!drawing) return;\n    const {\n      offsetX,\n      offsetY\n    } = nativeEvent;\n    ctxRef.current.lineTo(offsetX, offsetY);\n    ctxRef.current.stroke();\n    if (!canvasDone) updateCanvas(offsetX, offsetY);\n  };\n  const clear = () => {\n    ctxRef.current.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n  };\n  const onMouseDownImage = event => {\n    console.log(minX, minY);\n    setActiveImg(event.target.id);\n  };\n  const onMouseMoveImage = event => {\n    updateObj(activeImg, xToRatio(event.clientX), yToRatio(event.clientY));\n  };\n  const onMouseUpImage = event => {\n    updateObj(activeImg, xToRatio(event.clientX), yToRatio(event.clientY));\n    setActiveImg(\"\");\n  };\n  const setActive = event => {\n    setActiveButton(event.target.id);\n    console.log(activeButton);\n  };\n  const addItem = () => {\n    if (activeButton == \"\") return;\n    addObj(activeButton, 0.5, 0.5);\n    setActiveButton(\"\");\n  };\n  const translateUrl = typeStr => {\n    let map = {\n      \"person\": personWhite,\n      \"knife\": knifeWhite,\n      \"bio\": bioWhite\n    };\n    return map[typeStr];\n  };\n  const clearItem = () => {\n    clearObj();\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.lineCap = 'round';\n    ctx.strokeStyle = 'blue';\n    ctx.lineWidth = 2;\n    ctxRef.current = ctx;\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getObjs();\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"960\",\n        height: \"640\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Crime Reality\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        onMouseDown: startDraw,\n        onMouseUp: stopDraw,\n        onMouseMove: draw,\n        ref: canvasRef,\n        width: 960,\n        height: 640,\n        style: {\n          backgroundImage: 'url(' + map + ')',\n          opacity: 0.8,\n          backgroundSize: 960\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), canvasDone && objs && objs.map((obj, index) => /*#__PURE__*/_jsxDEV(DraggableCore, {\n        onStart: onMouseDownImage,\n        onDrag: onMouseMoveImage,\n        onStop: onMouseUpImage,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          id: obj.id,\n          src: translateUrl(obj.type),\n          width: 50,\n          draggable: false,\n          style: {\n            left: ratioToX(obj.x) - 25,\n            top: ratioToY(obj.y) - 25,\n            position: \"absolute\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 29\n        }, this)\n      }, obj.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this), !canvasDone && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: confirmCanvas,\n      children: \"Confirm Canvas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }, this), canvasDone && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        display: \"inline-block\"\n      },\n      onClick: setActive,\n      id: \"knife\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"knife\",\n        src: knife,\n        width: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 101\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 28\n    }, this), canvasDone && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        display: \"inline-block\"\n      },\n      onClick: setActive,\n      id: \"bio\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"bio\",\n        src: bio,\n        width: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 99\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 28\n    }, this), canvasDone && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        display: \"inline-block\"\n      },\n      onClick: setActive,\n      id: \"person\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"person\",\n        src: person,\n        width: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 102\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 28\n    }, this), canvasDone && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        display: \"inline-block\"\n      },\n      id: \"others\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"person\",\n        src: others,\n        width: 30\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 82\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 13\n    }, this), canvasDone && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addItem,\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 28\n    }, this), canvasDone && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearItem,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n}\n_s(Drawing, \"Vkn3QoVAyJMfUsAM3g/qcHUUBPQ=\");\n_c = Drawing;\nexport default Drawing;\nvar _c;\n$RefreshReg$(_c, \"Drawing\");","map":{"version":3,"names":["useEffect","useRef","useState","knife","person","bio","knifeWhite","personWhite","bioWhite","others","map","axios","Draggable","DraggableCore","Drawing","drawing","setDrawing","minX","setMinX","minY","setMinY","maxX","setMaxX","maxY","setMaxY","canvasDone","setCanvasDone","activeImg","setActiveImg","activeButton","setActiveButton","objs","setObjs","canvasRef","ctxRef","addObj","type","x","y","method","url","params","then","response","data","clearObj","getObjs","console","log","updateObj","id","form","FormData","append","item","xToRatio","yToRatio","ratioToX","ratioToY","drawLine","x1","y1","x2","y2","color","canvas","current","ctx","getContext","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","confirmCanvas","rect","getBoundingClientRect","clear","updateCanvas","startDraw","nativeEvent","offsetX","offsetY","stopDraw","closePath","draw","clearRect","width","height","onMouseDownImage","event","target","onMouseMoveImage","clientX","clientY","onMouseUpImage","setActive","addItem","translateUrl","typeStr","clearItem","lineCap","interval","setInterval","clearInterval","position","backgroundImage","opacity","backgroundSize","obj","index","left","top","display"],"sources":["/Users/victorli/Workspace/reality-hack/frontend/src/Drawing.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport knife from './assets/weapon.svg';\nimport person from './assets/person.svg';\nimport bio from './assets/bio.svg';\nimport knifeWhite from './assets/weapon-white.svg';\nimport personWhite from './assets/person-white.svg';\nimport bioWhite from './assets/bio-white.svg';\nimport others from './assets/other.svg';\nimport map from './assets/map.jpg';\n\nimport axios from \"axios\";\nimport Draggable, {DraggableCore} from \"react-draggable\";\n\nfunction Drawing() {\n    const [drawing, setDrawing] = useState(false);\n    const [minX, setMinX] = useState(0);\n    const [minY, setMinY] = useState(0);\n    const [maxX, setMaxX] = useState(960);\n    const [maxY, setMaxY] = useState(640);\n    const [canvasDone, setCanvasDone] = useState(false);\n    \n    // const [minX, setMinX] = useState(2000);\n    // const [minY, setMinY] = useState(2000);\n    // const [maxX, setMaxX] = useState(-1);\n    // const [maxY, setMaxY] = useState(-1);\n    // const [canvasDone, setCanvasDone] = useState(false);\n    const [activeImg, setActiveImg] = useState(\"\");\n    const [activeButton, setActiveButton] = useState(\"\");\n    const [objs, setObjs] = useState([]);\n    const canvasRef = useRef(null);\n    const ctxRef = useRef(null);\n\n    const addObj = (type, x, y) => {\n        axios({\n            method: \"POST\",\n            url:\"/data/add\",\n            params:{\n                \"type\": type,\n                \"x\": x,\n                \"y\": y,\n            }\n        })\n        .then((response) => {\n            setObjs(response.data);\n        });\n    }\n    const clearObj = () => {\n        axios({\n            method: \"POST\",\n            url:\"/data/clear\",\n        })\n        .then((response) => {\n            setObjs(response.data);\n        });\n    }\n    const getObjs = () => {\n        axios({\n            method: \"GET\",\n            url:\"/data\",\n        })\n        .then((response) => {\n            setObjs(response.data);\n            console.log(response.data);\n        });\n    }\n    const updateObj = (id, x, y) => {\n        const form = new FormData();\n        form.append('items', '[{\"id\": \"' + id + '\", \"x\":' + x + ', \"y\":' + y + '}]'); \n\n        axios({\n            method: \"POST\",\n            url:\"/data/update\",\n            data: {\n                item\n            }\n        })\n        .then((response) => {\n            setObjs(response.data);\n        });\n    }\n    const xToRatio = (x) => {\n        console.log(x, minX, maxX);\n        return (x - minX) / (maxX - minX)\n    }\n    const yToRatio = (y) => {\n        console.log(y, minY, maxY);\n        return (y - minY) / (maxY - minY)\n    }\n    const ratioToX = (x) => {\n        return x * (maxX - minX) + minX\n    }\n    const ratioToY = (y) => {\n        console.log(y, minY, maxY, y * (maxY - minY) + minY)\n        return y * (maxY - minY) + minY\n    }\n    const drawLine = (x1, y1, x2, y2, color) => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 2;\n        ctx.stroke();\n        ctxRef.current = ctx;\n    }\n    const confirmCanvas = () => {\n        setCanvasDone(true);\n        const canvas = canvasRef.current;\n        const rect = canvas.getBoundingClientRect();\n        console.log(rect);\n        console.log(rect[\"x\"], rect[\"y\"]);\n        clear();\n        drawLine(minX, minY, minX, maxY, \"black\");\n        drawLine(minX, maxY, maxX, maxY, \"black\");\n        drawLine(maxX, maxY, maxX, minY, \"black\");\n        drawLine(maxX, minY, minX, minY, \"black\");\n        console.log(\"done\", maxX - minX, minX, maxY - minY, minY);\n        setMinX(minX + rect[\"x\"]);\n        setMaxX(maxX + rect[\"x\"]);\n        setMinY(minY + rect[\"y\"]);\n        setMaxY(maxY + rect[\"y\"]);\n        console.log(\"done\", maxX - minX, minX, maxY - minY, minY);\n    }\n    const updateCanvas = (x, y) => {\n        if (x < minX) setMinX(x);\n        if (y < minY) setMinY(y);\n        if (x > maxX) setMaxX(x);\n        if (y > maxY) setMaxY(y);\n    }\n    const startDraw = ({ nativeEvent }) => {\n        if (canvasDone) return;\n        const { offsetX, offsetY } = nativeEvent;\n        ctxRef.current.beginPath();\n        ctxRef.current.moveTo(offsetX, offsetY);\n        setDrawing(true);\n        if (!canvasDone) updateCanvas(offsetX, offsetY);\n    };\n    const stopDraw = () => {\n        if (canvasDone) return;\n        ctxRef.current.closePath();\n        setDrawing(false);\n    };\n    const draw = ({ nativeEvent }) => {\n        if (canvasDone) return;\n        if (!drawing) return;\n        const { offsetX, offsetY } = nativeEvent;\n        ctxRef.current.lineTo(offsetX, offsetY);\n        ctxRef.current.stroke();\n        if (!canvasDone) updateCanvas(offsetX, offsetY);\n    };\n    const clear = () => {\n        ctxRef.current.clearRect(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height\n        );\n    };\n    const onMouseDownImage = (event) => {\n        console.log(minX, minY);\n        setActiveImg(event.target.id);\n    }\n    const onMouseMoveImage = (event) => {\n        updateObj(activeImg, xToRatio(event.clientX), yToRatio(event.clientY));\n    }\n    const onMouseUpImage = (event) => {\n        updateObj(activeImg, xToRatio(event.clientX), yToRatio(event.clientY));\n        setActiveImg(\"\");\n    }\n    const setActive = (event) => {\n        setActiveButton(event.target.id);\n        console.log(activeButton);\n    }\n    const addItem = () => {\n        if (activeButton == \"\") return;\n        addObj(activeButton, 0.5, 0.5);\n        setActiveButton(\"\");\n    }\n    const translateUrl = (typeStr) => {\n        let map = {\n            \"person\": personWhite,\n            \"knife\": knifeWhite,\n            \"bio\": bioWhite,\n        };\n        return map[typeStr];\n    }\n    const clearItem = () => {\n        clearObj();\n    }\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        const ctx = canvas.getContext('2d');\n        ctx.lineCap = 'round';\n        ctx.strokeStyle = 'blue';\n        ctx.lineWidth = 2;\n        ctxRef.current = ctx;\n    }, []);\n    useEffect(() => {\n        const interval = setInterval(() => {\n            getObjs();\n        }, 1000);\n        return () => clearInterval(interval);\n      }, []);\n    return (\n        <>\n            <div style={{position:\"relative\", width:\"960\", height:\"640\"}}>\n            <h1>Crime Reality</h1>\n                <canvas\n                    onMouseDown={startDraw}\n                    onMouseUp={stopDraw}\n                    onMouseMove={draw}\n                    ref={canvasRef}\n                    width={960} \n                    height={640}\n                    style={{backgroundImage:'url(' + map + ')', opacity:0.8, backgroundSize: 960}}\n                />\n                {canvasDone && objs && objs.map((obj, index) => (\n                        <DraggableCore\n                            key={obj.id} \n                            onStart={onMouseDownImage}\n                            onDrag={onMouseMoveImage}\n                            onStop={onMouseUpImage}\n                            >\n                            <img id={obj.id} src={translateUrl(obj.type)} width={50} draggable={false}\n                                style={{left:ratioToX(obj.x) - 25, top:ratioToY(obj.y) - 25, position:\"absolute\"}}\n                            />\n                        </DraggableCore>\n                ))}\n            </div>\n            {!canvasDone && <button onClick={confirmCanvas}>Confirm Canvas</button>}\n            {canvasDone && <button style={{display:\"inline-block\"}} onClick={setActive} id=\"knife\"> <img id=\"knife\" src={knife} width={30}/></button>}\n            {canvasDone && <button style={{display:\"inline-block\"}} onClick={setActive} id=\"bio\"> <img id=\"bio\" src={bio} width={30}/></button>}\n            {canvasDone && <button style={{display:\"inline-block\"}} onClick={setActive} id=\"person\"> <img id=\"person\" src={person} width={30}/></button>}\n            {canvasDone && <button style={{display:\"inline-block\"}} id=\"others\"> <img id=\"person\" src={others} width={30}/></button>}\n            <br/>\n            {canvasDone && <button onClick={addItem}>Add</button>}\n            {canvasDone && <button onClick={clearItem}>Clear</button>}\n        </>\n    );\n}\n\nexport default Drawing;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}